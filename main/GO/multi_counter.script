
function on_message(self, message_id, message)
	local temp_score, multiplier, text, tex_len, charged
	local ax, ay, x, y = 60, 46    -- default position for text to appear
	local scale, attack, sustain, release

	if message_id == hash("charged_combo text -final") then
		-- if no combo
		if message.amount == 1 and message.charged == 1 or message.charged == 0 and message.amount > 0 then
			score = score + message.score
			stat_score = stat_score + message.score
			change_darkness(message.dark)
			text = tostring(message.score)
			if message.longer then
				scale, attack, sustain, release = .64, .82, .6, .42
			else
				scale, attack, sustain, release = .52, .4, .2, .16
			end
		-- if combo
		elseif message.amount > 1 and message.charged > 0 then
			go.set("#+",     "color", vmath.vector4(.1, 1, .44, 1))
			go.set("#count", "color", vmath.vector4(.1, 1, .44, 1))
			go.set("#+",     "outline", vmath.vector4(0,0,0,1))
			go.set("#count", "outline", vmath.vector4(0,0,0,1))

			--old_score = score
			--multiplier = (message.amount
			--multiplier = (message.amount * 10)
			temp_score = message.score * message.amount
			score = score + temp_score
			if temp_score > stat_chain_score then
				stat_chain_score = temp_score
			end
			--score = score + multiplier
			stat_score = stat_score + temp_score
			-- stat_score = stat_score + (message.score * multiplier)
			--stat_score = stat_score + multiplier
			stat_combo = stat_combo + 1
			change_darkness(message.amount)
			text = tostring(temp_score)
			scale, attack, sustain, release = .64, .82, .6, .42
		else
			if score > 0 then
				go.set("#+",     "color", vmath.vector4(1, .2, .06, 1))
				go.set("#count", "color", vmath.vector4(1, .2, .06, 1))
				label.set_text("#+", "-")
				text = tostring(bullet_miss)
			else
				label.set_text("#+", "")
				text = ""
			end
			scale, attack, sustain, release = .52, .4, .2, .16
		end

		tex_len = #text
		x, y = ax * scale, ay * scale
		label.set_text("#count", text)

		text = emojis_left == 0 and "force" or ""
		timer.delay(0.04, false, function()
			msg.post("game_layer2:/main#game_gui", "display_update", {stat = text})
		end)




		if message.pos.x + x + (72 * scale * tex_len) >= window_w then
			x = -x + (window_w - cursor_x) - (48 * scale * tex_len)
		end
		if message.pos.y + y + 72 * scale >= window_h - 72 * scale then
			y = -y - 22 * scale
		end

		go.set_scale(0.01)
		go.set_position(vmath.vector3(message.pos.x, message.pos.y, 1))

		go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, scale, go.EASING_LINEAR, attack)
		go.animate(".", "position.x", go.PLAYBACK_ONCE_FORWARD, message.pos.x + x, go.EASING_OUTSINE, attack * 1.4)
		go.animate(".", "position.y", go.PLAYBACK_ONCE_FORWARD, message.pos.y + y, go.EASING_OUTSINE, attack * 1.4, 0, function()
			go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, 0.01, go.EASING_LINEAR, release, sustain, function()
				go.delete(".")
			end)
		end)
	end
end
