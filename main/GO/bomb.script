
local charged_combo_count, charged_combo_score, charged_emoji_count




function init(self)
	--local type

	self.active    = true
	self.sprite    = msg.url(nil, go.get_id(), "sprite")
	self.collision = msg.url(nil, go.get_id(), "collide_emoji")
	self.blast     = msg.url(nil, go.get_id(), "blast")
	self.particle  = msg.url(nil, go.get_id(), "explosion")

	msg.post(self.blast, "disable")
end




function on_message(self, message_id, message)
	if message_id == hash("collision_response") and level_play and self.active then
		local pos = go.get_position()

		if message.group == hash("weapon") then
			charged_combo_count, charged_combo_score, charged_emoji_count = 0, 0, 0
			self.active = false
			allow_combo_counter = false
			score = score + bullet_miss
			change_darkness(25)
			msg.post(self.collision, "disable")
			go.set(self.sprite, "tint.w", 0)
			go.set_rotation(vmath.quat_rotation_z(math.random(1, 360)), self.sprite)
			go.set_scale(2)

			msg.post(self.blast, "enable")
			timer.delay(.1, false, function()
				msg.post(self.blast, "disable")
				factory.create("/bomb#wavepush_factory", vmath.vector3(pos.x, pos.y, 0.9))
			end)
			timer.delay(.2, false, function()
				if charged_combo_count > 0 then
					msg.post("game_layer2:/main#ctrl", "show charged_combo display", {amount = charged_combo_count, score = charged_combo_score, charged = charged_emoji_count})
				end
			end)

			go.set_position(vmath.vector3(pos.x, pos.y, 0.9), self.particle)
			sound.play("/bomb#explode"..math.random(1, 2), {speed = proxy_speed})
			sound.play("/bomb#explode_echo"..math.random(1, 2), {speed = proxy_speed, delay = .4})
			particlefx.play(self.particle)
		end




	elseif message_id == hash("count charged_kill") then
		charged_combo_count = charged_combo_count + 1
		if message.charged then charged_emoji_count = charged_emoji_count + 1 end
		charged_combo_score = charged_combo_score + message.score




	elseif message_id == hash("clean_bombs") then
		for _,a in ipairs(bomb_table) do
			go.delete(a)
		end
	end
end