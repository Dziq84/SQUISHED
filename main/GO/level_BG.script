local z, last_id = 0
local default_range = 10000



function init(self)
	self.active = true
	self.rotate = false
	self.color  = false
	self.scale  = false
	self.change = false
	self.sprite_id = msg.url(nil, go.get_id(), "sprite")
	self.z = z

	go.set_position(vmath.vector3(window_w / 2, window_h / 2 , z))
	z = z + 0.01 ; last_id = go.get_id()
	go.set_scale(3.64 * 2) -- 3.64 is for 512x512 BG's
	msg.post(self.sprite_id, "play_animation", { id = hash("bg"..math.random(1, level_bg_in_atlas)) })

	go.set(self.sprite_id, "tint", vmath.vector4(.12, .18, .24, 0))
	go.animate(self.sprite_id, "tint.w", go.PLAYBACK_ONCE_FORWARD, math.random(16, 64) / 100, go.EASING_INOUTSINE, math.random(8, 22))
end




function update(self, dt)
	local range, tint

	if BG_active == true then
	
		if self.rotate == false then
			self.rotate = true
			go.animate(".", "euler.z", go.PLAYBACK_ONCE_FORWARD, math.random(-360, 360), go.EASING_INOUTSINE, math.random(64, 88), .24, function ()
				self.rotate = false
			end)

		elseif self.color == false and self.change == false then
			self.color = true
			tint = vmath.vector4(math.random(10, 100) / 100, math.random(14, 100) / 100, math.random(18, 100) / 100, math.random(2, 64) / 100)
			go.animate(self.sprite_id, "tint", go.PLAYBACK_ONCE_FORWARD, tint, go.EASING_INOUTSINE, math.random(18, 32), 4, function ()
				self.color = false
			end)

		elseif self.scale == false then
			self.scale = true
			go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, (math.random(364, 860) / 100) * 2, go.EASING_INOUTSINE, math.random(10, 26), 6, function ()
				self.scale = false
			end)
		elseif self.change == true then
			self.change = -1
			go.animate(self.sprite_id, "tint.w", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_INOUTSINE, math.random(22, 40), 10, function ()
				msg.post(self.sprite_id, "play_animation", { id = hash("bg"..math.random(1, level_bg_in_atlas)) })
				go.set_position(vmath.vector3(window_w / 2, window_h / 2 , self.z))
				self.change = false
				if last_id == go.get_id() then
					pprint("BG CHANGE FRONT")
				else
					pprint("BG CHANGE")
				end
			end)
		end

		if last_id == go.get_id() then range = default_range + 4 else range = default_range end
		if rnd.range(1, range) >= 10000 and self.change == false then self.change = true end


	else
		if self.active == true then
			self.active = false
			go.cancel_animations(self.sprite_id, "tint")
			go.animate(self.sprite_id, "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(1,1,1,0), go.EASING_INOUTSINE, 4, 0, function ()
				go.delete()
			end)
		end
	end
end
