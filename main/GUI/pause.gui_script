function init(self)
	msg.post("#", "disable")
end




function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		gui.set_render_order(1)
		gui.reset_nodes()
		if pause_id == "main:/main#title_menu_proxy" then gui.set_enabled(gui.get_node("BACK"), false) end
		gui.set_color(gui.get_node("BG1"), vmath.vector4(0,0,0,0))
		gui.set_color(gui.get_node("BG2"), vmath.vector4(0,0,0,0))
		gui.animate(gui.get_node("BG1"), "color", vmath.vector4(.1, .2, .3, 1), gui.EASING_INSINE, 1.4)
		gui.animate(gui.get_node("BG2"), "color", vmath.vector4(1,1,1,1), gui.EASING_INSINE, .8)
		msg.post("#", "enable")


	elseif message_id == hash("hide") then
		msg.post("#", "disable")


	elseif message_id == hash("restore options button") then
		gui.set_enabled(gui.get_node("options_button"), true)
	end
end




function on_input(self, action_id, action)
	if gui.pick_node(gui.get_node("box1"), action.x, action.y) then
		if resume_node_anim == nil then
			resume_node_anim = 1
			resume_anim()
		end
		
		if action_id == hash("click1") and action.pressed then
			pause(pause_id)
		end
	else
		resume_node_anim = nil
		gui.animate(gui.get_node("resume"), "scale", .496, gui.EASING_INSINE, .5)
	end


	if action.pressed then
		if gui.pick_node(gui.get_node("back_button"), action.x, action.y) and gui.is_enabled(gui.get_node("BACK")) then
			msg.post("main:/main#ctrl", "show_title_menu")


		elseif gui.pick_node(gui.get_node("options_button"), action.x, action.y) then
			msg.post("#", "release_input_focus")
			gui.set_enabled(gui.get_node("options_button"), false)
			msg.post("main:/main#options", "show")
		end
	end
end




function resume_anim()
	gui.animate(gui.get_node("resume"), "scale", math.random(56, 70) / 100, gui.EASING_INSINE, .5, 0, function()
		resume_anim()
	end)
end
