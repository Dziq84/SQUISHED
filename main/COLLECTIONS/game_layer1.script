
local clock_id, level_id




function update()
	if bonus_can_spawn == true and emojis_left < bonus_requirement and level_play then
		msg.post("game_layer2:/main#game_gui", "display_update", {mode = "remove_bonus_info"})
		bonus_can_spawn = -1
	end
end




function on_message(self, message_id, message)
	local id, timeout, delay = 0, 0, 4
	local music_variant--, type

	if message_id == hash("generate_emojis") then
		timer.delay(0.1, false, function()
			generate_emojis(message.emojis, "#emoji_factory", message.scale, message.table_clear)
		end)




	elseif message_id == hash("generate_bombs") then
		generate_bombs(message.amount, message.scale)




	elseif message_id == hash("generate_orbs") then
		generate_orbs(message.amount, message.scale)




	elseif message_id == hash("bonus level emoji at end") then
		for _, id in ipairs(emoji_table) do
			msg.post(id, "bonus level emoji at end", {timeout = socket.gettime() + timeout, delay = delay})
			if delay > 0.026 then
				delay = delay - (delay * 0.04)
			else
				delay = 0.026
			end
			timeout = timeout + 0.026
		end




	elseif message_id == hash("spawn_weapon") then
		weapon_id = factory.create("pistol#spawner", vmath.vector3(message.x, message.y, 1))

		if weapon_collide then
			sound.play("pistol#pistol"..math.random(1, 3), {gain = .2})
		else
			sound.play("pistol#pistol_empty", {gain = .2})
		end




	-- bonuses:
	elseif message_id == hash("bonus_clock") then
		clock_id = factory.create("bonus#clock")
		clock_url = msg.url(nil, clock_id, nil)

	elseif message_id == hash("bonus_level") then
		level_id = factory.create("bonus#level")
		level_url = msg.url(nil, level_id, nil)




	elseif message_id == hash("fade_in_music") then
		if message.start_new then
			sound.play("main#level_loop")
			sound.play("main#level_loop_dark")
		end
			sound.set_gain("main#level_loop", 0)
			sound.set_gain("main#level_loop_dark", 0)

		if message.continue == nil then
			go.animate("main#level_loop", "gain", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_LINEAR, message.time, message.delay)
		else
			go.animate("main#level_loop", "gain", go.PLAYBACK_ONCE_FORWARD, 1 - darkness_level_temp, go.EASING_LINEAR, message.time, message.delay)
			go.animate("main#level_loop_dark", "gain", go.PLAYBACK_ONCE_FORWARD, darkness_level_temp, go.EASING_LINEAR, message.time, message.delay)
			darkness_level_temp = nil
		end


	elseif message_id == hash("fade_out_music") then
		go.animate("main#level_loop", "gain", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 4)
		go.animate("main#level_loop_dark", "gain", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 4, 0, function()
			if message.disable then
				sound.stop("main#level_loop")
				sound.stop("main#level_loop_dark")
			end
		end)


	elseif message_id == hash("update_music") then
		sound.set_gain("main#level_loop", 1 - darkness_level)
		sound.set_gain("main#level_loop_dark", darkness_level)


	elseif message_id == hash("fade_in_add_music") then
		sound.play("main#level_loop_add")
		sound.set_gain("main#level_loop_add", 0)
		go.animate("main#level_loop_add", "gain", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_LINEAR, 2)


	elseif message_id == hash("fade_out_add_music") then
		go.animate("main#level_loop_add", "gain", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, message.time, 0, function()
			sound.stop("main#level_loop_add")
		end)


	elseif message_id == hash("play_hall_music") then
		sound.play("#hall_music")
		sound.set_gain("#hall_music", 0)
		go.animate("#hall_music", "gain", go.PLAYBACK_ONCE_FORWARD, .72, go.EASING_LINEAR, 2)




	elseif message_id == hash("get bonuses_delay_time") then
		timer.delay(10, false, function()
			bonus_can_spawn = true
		end)
		timer.delay(6, false, function()
			orb_can_spawn = true
		end)
	end
end
