emoji_in_atlas    = 100
blood_in_atlas    = 12
level_bg_in_atlas = 64


menu_options_visible = false
post_game  = false
play_intro = false
pause_id   = nil
proxy_speed = 1    --for game_layer1 speed control




function init(self)
	msg.post("#", "acquire_input_focus")
	math.randomseed(socket.gettime() * 1000)

	defos.set_cursor_clipped(true)
	defos.set_cursor_visible(false)

	defos.disable_maximize_button()
	defos.disable_window_resize()
	display = defos.get_displays()

	screen_w = display[1].bounds.width
	screen_h = display[1].bounds.height - 36
	--screen_w = 1680
	--screen_h = 1050

	--screen_w = 1650 ; screen_h = 874  -- smaller window
	--screen_w = 1650 ; screen_h = 600   -- for recording

	window_w = 1280 * 4 ; window_h = 1320 * 4

	-- resize window if too big for display
	if screen_h <= window_h then
		scale_ratio = window_h / (screen_h - 36)
		window_w = window_w / scale_ratio
		window_h = window_h / scale_ratio
	end

	defos.set_view_size((screen_w - window_w) / 2, ((screen_h - 36) - window_h) / 2, window_w, window_h)
	window_w = 1280 ; window_h = 1320

	msg.post("@render:", "refresh_window_size")

	msg.post("#title_menu_proxy", "load")
	--discord_presence()
	debug_profiling()
end




function discord_presence()
	discordrich.initialize("888560155027988561")
	
	discordrich.update_presence({
		status = "testing",
		details = "bug hunting",
	})
end




function debug_profiling()
	profiler.enable_ui(true)
	profiler.set_ui_view_mode(profiler.VIEW_MODE_MINIMIZED)
	--profiler.set_ui_view_mode(0)
	--profiler.view_recorded_frame()
end




function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		pprint(tostring(sender).." LOADED")

		msg.post(sender, "init")
		msg.post(sender, "enable")


	elseif message_id == hash("proxy_unloaded") then
		pprint(tostring(sender).." UNLOADED")




	elseif message_id == hash("start_game") then
		msg.post("#game_proxy1", "async_load")
		msg.post("#game_proxy2", "async_load")




	elseif message_id == hash("set dark render") then
		go.set("/render_target#quad", "mult", vmath.vector4(1 - darkness_level))




	-- pause BACK_TO_MENU button handling:
	elseif message_id == hash("show_title_menu") then
		msg.post("main:/main#game_proxy1", "unload")
		msg.post("main:/main#game_proxy2", "unload")

		if menu_proxy == false then
			msg.post("#title_menu_proxy", "async_load")
		else
			msg.post("#title_menu_proxy", "unload")
			msg.post("#title_menu_proxy", "async_load")
		end
		pause(pause_id)
	end
end
